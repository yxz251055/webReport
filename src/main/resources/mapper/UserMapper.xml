<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="com.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="operateId" property="operateId" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="DATE" />
    <result column="updateDate" property="updateDate" jdbcType="DATE" />
    <result column="yn" property="yn" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, name,role,operateId, createDate,updateDate,yn
  </sql>
  <select id="loginUser" resultMap="BaseResultMap" parameterType="com.domain.User" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userName = #{userName,jdbcType=INTEGER}
    and password = #{password,jdbcType=INTEGER}
    and yn = 1
  </select>
  <select id="isAdmin" resultType="String" parameterType="String" >
    select
    role
    from user
    where userName = #{_parameter}
    and yn = 1
  </select>
  <select id="getCountUser" resultType="long" parameterType="com.domain.User" >
    select count(1) from user
    <where>
      <if test="userName!=null and userName !=''">
        and userName = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="name!=null and name !=''">
        and name = #{name,jdbcType=INTEGER}
      </if>
      <if test="role!=null and role !=''">
        and role = #{role,jdbcType=INTEGER}
      </if>
      <if test="startDate!=null and startDate !=''">
        and createDate &gt; #{startDate,jdbcType=VARCHAR}
      </if>
      <if test="endDate!=null and endDate !=''">
        and createDate &lt; #{endDate,jdbcType=VARCHAR}
      </if>
      <if test="operateId!=null and operateId !=''">
        and operateId = #{operateId,jdbcType=VARCHAR}
      </if>
      and yn = 1
    </where>
  </select>
  <select id="queryUserByPage" resultMap="BaseResultMap" parameterType="com.domain.User" >
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="userName!=null and userName !=''">
        and userName = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="name!=null and name !=''">
        and name = #{name,jdbcType=INTEGER}
      </if>
      <if test="role!=null and role !=''">
        and role = #{role,jdbcType=INTEGER}
      </if>
      <if test="startDate!=null and startDate !=''">
        and createDate &gt; #{startDate,jdbcType=VARCHAR}
      </if>
      <if test="endDate!=null and endDate !=''">
        and createDate &lt; #{endDate,jdbcType=VARCHAR}
      </if>
      <if test="operateId!=null and operateId !=''">
        and operateId = #{operateId,jdbcType=VARCHAR}
      </if>
      and yn = 1
    </where>
  </select>

  <insert id="saveUser" parameterType="com.domain.User" >
    insert into user (username, password,
    name, role, operateId, createDate,
    updateDate,yn)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},#{operateId,jdbcType=VARCHAR},now(),now(),1)
  </insert>
  <update id="updateUser" parameterType="com.domain.User" >
    update user
    set username = #{userName,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    role = #{role,jdbcType=VARCHAR},
    operateId = #{operateId,jdbcType=VARCHAR},
    updateDate = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteUser" parameterType="com.domain.User" >
    update user
    set yn = 0,
    operateId = #{operateId,jdbcType=VARCHAR},
    updateDate = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>